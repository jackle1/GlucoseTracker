{"ast":null,"code":"var _jsxFileName = \"/Users/jackle/Desktop/GlucoseTracker/src/components/AddFood.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddFood = () => {\n  _s();\n\n  const [text, setText] = useState(''); //create a piece of state and a function to manipulate it\n\n  const [amount, setAmount] = useState(''); //default is 0\n\n  const {\n    addFood\n  } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDeafult();\n    const newFood = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Food Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Food Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value) //this will update whatever is being typed in\n          ,\n          placeholder: \"Enter name of food...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Grams of Carbohydrates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter grams of carbs in listed food...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddFood, \"4DX6zk3UWIE286OTSR7rTgJDAg0=\");\n\n_c = AddFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFood\");","map":{"version":3,"sources":["/Users/jackle/Desktop/GlucoseTracker/src/components/AddFood.js"],"names":["React","useState","useContext","GlobalContext","AddFood","text","setText","amount","setAmount","addFood","onSubmit","e","preventDeafult","newFood","id","Math","floor","random","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CADyB,CACa;;AACtC,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAFyB,CAEiB;;AAE1C,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,UAAU,CAACC,aAAD,CAA9B;;AAEA,QAAMO,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADU;AAEdZ,MAAAA,IAFc;AAGdE,MAAAA;AAHc,KAAhB;AAKD,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEG,QAAhB;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEL,IAA1B;AAAgC,UAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAxD,CACA;AADA;AAEA,UAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEZ,MAA5B;AAAoC,UAAA,QAAQ,EAAGI,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAA9D;AACA,UAAA,WAAW,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,eAaA;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CApCM;;GAAMf,O;;KAAAA,O","sourcesContent":["import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddFood = () => {\n    const [text, setText] = useState(''); //create a piece of state and a function to manipulate it\n    const [amount, setAmount] = useState(''); //default is 0\n\n    const { addFood } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n      e.preventDeafult();\n\n      const newFood = {\n        id: Math.floor(Math.random() * 100000000),\n        text,\n        amount\n      }\n    }\n\n    return (\n        <div>\n            <h3>Add New Food Item</h3>\n            <form onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label htmlFor=\"text\">Food Name</label>\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} \n                //this will update whatever is being typed in\n                placeholder=\"Enter name of food...\" />\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"amount\"\n                >Grams of Carbohydrates</label>\n                <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} \n                placeholder=\"Enter grams of carbs in listed food...\" />\n            </div>\n            <button className=\"btn\">Add food</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}