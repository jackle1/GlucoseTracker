{"ast":null,"code":"var _jsxFileName = \"/Users/jackle/Desktop/GlucoseTracker/src/components/BloodSugar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BloodSugar = () => {\n  _s();\n\n  const {\n    foods\n  } = useContext(GlobalContext);\n  const {\n    startlevel\n  } = useContext(GlobalContext);\n  const amounts = foods.map(foods => foods.amount);\n  const flux = startlevel.map(startlevel => startlevel.initial);\n  const total = amounts.reduce((acc, item) => acc += item * 0.1, 0).toFixed(2);\n  const diff = 7.8 - parseFloat(flux); //const total = 1.0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inc-exp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"level target\",\n        children: \"7.8mmol/L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Fluctuation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: total > 3.20 ? \"level change\" : \"level target\",\n        children: [total, \"mmol/L\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BloodSugar, \"YOjdsBzQ/7gjSvGci1rgaVGvDYY=\");\n\n_c = BloodSugar;\n\nvar _c;\n\n$RefreshReg$(_c, \"BloodSugar\");","map":{"version":3,"sources":["/Users/jackle/Desktop/GlucoseTracker/src/components/BloodSugar.js"],"names":["React","useContext","GlobalContext","BloodSugar","foods","startlevel","amounts","map","amount","flux","initial","total","reduce","acc","item","toFixed","diff","parseFloat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,CAACC,aAAD,CAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAiBJ,UAAU,CAACC,aAAD,CAAjC;AAEA,QAAMI,OAAO,GAAGF,KAAK,CAACG,GAAN,CAAUH,KAAK,IAAIA,KAAK,CAACI,MAAzB,CAAhB;AACA,QAAMC,IAAI,GAAGJ,UAAU,CAACE,GAAX,CAAeF,UAAU,IAAIA,UAAU,CAACK,OAAxC,CAAb;AAEA,QAAMC,KAAK,GAAGL,OAAO,CAACM,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,IAAIC,IAAI,GAAG,GAA7C,EAAmD,CAAnD,EAAsDC,OAAtD,CAA8D,CAA9D,CAAd;AAEA,QAAMC,IAAI,GAAG,MAAMC,UAAU,CAACR,IAAD,CAA7B,CAT4B,CAU5B;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAEE,KAAK,GAAG,IAAR,GAAe,cAAf,GAA+B,cAA7C;AAAA,mBAA8DA,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBM;;GAAMR,U;;KAAAA,U","sourcesContent":["import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const BloodSugar = () => {\n    const { foods } = useContext(GlobalContext);\n    const { startlevel } = useContext(GlobalContext);\n\n    const amounts = foods.map(foods => foods.amount);\n    const flux = startlevel.map(startlevel => startlevel.initial);\n\n    const total = amounts.reduce((acc, item) => (acc += item * 0.1), 0).toFixed(2);\n\n    const diff = 7.8 - parseFloat(flux)\n    //const total = 1.0;\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Target</h4>\n          <p className=\"level target\">7.8mmol/L</p>\n        </div>\n        <div>\n          <h4>Fluctuation</h4>\n          <p className={total > 3.20 ? \"level change\": \"level target\"}>{total}mmol/L</p>\n        </div>\n      </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}