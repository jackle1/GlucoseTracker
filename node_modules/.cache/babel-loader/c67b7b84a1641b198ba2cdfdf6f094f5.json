{"ast":null,"code":"var _jsxFileName = \"/Users/jackle/Desktop/GlucoseTracker/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; // Initial state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  foods: []\n}; // Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Provider component\n\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  function deleteFood(id) {\n    dispatch({\n      type: 'DELETE_FOOD',\n      payload: id\n    });\n  }\n\n  function addFood(transaction) {\n    dispatch({\n      type: 'ADD_FOOD',\n      payload: foods\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      foods: state.foods,\n      deleteFood,\n      addFood\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/jackle/Desktop/GlucoseTracker/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","foods","GlobalContext","GlobalProvider","children","state","dispatch","deleteFood","id","type","payload","addFood","transaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAIA;;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AACA,WAASO,UAAT,CAAoBC,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,OAAT,CAAiBC,WAAjB,EAA8B;AAC5BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAET;AAFF,KAAD,CAAR;AAID;;AAED,sBAAQ,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCA,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADwB;AAErCM,MAAAA,UAFqC;AAGrCI,MAAAA;AAHqC,KAA/B;AAAA,cAKLP;AALK;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD,CAzBM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  foods: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteFood(id) {\n    dispatch({\n      type: 'DELETE_FOOD',\n      payload: id\n    });\n  }\n\n  function addFood(transaction) {\n    dispatch({\n      type: 'ADD_FOOD',\n      payload: foods\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    foods: state.foods,\n    deleteFood,\n    addFood\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}